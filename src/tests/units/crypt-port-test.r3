Rebol [
	Title:   "Rebol3 Crypt port test script"
	Author:  "Oldes, Peter W A Wood"
	File: 	 %crypt-port-test.r3
	Tabs:	 4
	Needs:   [%../quick-test-module.r3]
]

~~~start-file~~~ "Crypt port"

===start-group=== "FIPS-197 test vectors"

test-crypt: func[port key iv plain cipher][
	modify port 'direction 'encrypt
	modify port 'key key
	modify port 'iv  iv
	--assert cipher = try [read write port plain]
	modify port 'direction 'decrypt
	--assert plain  = try [read write port cipher]
]
tests: [
	AES-128-ECB [
		#{000102030405060708090A0B0C0D0E0F}
		#[none]
		#{00112233445566778899AABBCCDDEEFF}
		#{69C4E0D86A7B0430D8CDB78070B4C55A}

		;NIST document SP800-38A
		#{2B7E151628AED2A6ABF7158809CF4F3C} #[none] #{6BC1BEE22E409F96E93D7E117393172A} #{3AD77BB40D7A3660A89ECAF32466EF97}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #[none] #{AE2D8A571E03AC9C9EB76FAC45AF8E51}	#{F5D3D58503B9699DE785895A96FDBAAF}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #[none] #{30C81C46A35CE411E5FBC1191A0A52EF} #{43B1CD7F598ECE23881B00E3ED030688}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #[none] #{F69F2445DF4F9B17AD2B417BE66C3710} #{7B0C785E27E8AD3F8223207104725DD4}
	]
	AES-192-ECB [
		#{000102030405060708090A0B0C0D0E0F1011121314151617}
		#[none]
		#{00112233445566778899AABBCCDDEEFF}
		#{DDA97CA4864CDFE06EAF70A0EC0D7191}

		#{8E73B0F7DA0E6452C810F32B809079E562F8EAD2522C6B7B} #[none] #{6BC1BEE22E409F96E93D7E117393172A} #{BD334F1D6E45F25FF712A214571FA5CC}
		#{8E73B0F7DA0E6452C810F32B809079E562F8EAD2522C6B7B} #[none] #{AE2D8A571E03AC9C9EB76FAC45AF8E51} #{974104846D0AD3AD7734ECB3ECEE4EEF}
		#{8E73B0F7DA0E6452C810F32B809079E562F8EAD2522C6B7B} #[none] #{30C81C46A35CE411E5FBC1191A0A52EF} #{EF7AFD2270E2E60ADCE0BA2FACE6444E}
		#{8E73B0F7DA0E6452C810F32B809079E562F8EAD2522C6B7B} #[none] #{F69F2445DF4F9B17AD2B417BE66C3710} #{9A4B41BA738D6C72FB16691603C18E0E}
	]
	AES-256-ECB [
		#{000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F} #[none] #{00112233445566778899AABBCCDDEEFF} #{8EA2B7CA516745BFEAFC49904B496089}

		#{603DEB1015CA71BE2B73AEF0857D77811F352C073B6108D72D9810A30914DFF4} #[none] #{6BC1BEE22E409F96E93D7E117393172A} #{F3EED1BDB5D2A03C064B5A7E3DB181F8}
		#{603DEB1015CA71BE2B73AEF0857D77811F352C073B6108D72D9810A30914DFF4} #[none] #{AE2D8A571E03AC9C9EB76FAC45AF8E51} #{591CCB10D410ED26DC5BA74A31362870}
		#{603DEB1015CA71BE2B73AEF0857D77811F352C073B6108D72D9810A30914DFF4} #[none] #{30C81C46A35CE411E5FBC1191A0A52EF} #{B6ED21B99CA6F4F9F153E7B1BEAFED1D}
		#{603DEB1015CA71BE2B73AEF0857D77811F352C073B6108D72D9810A30914DFF4} #[none] #{F69F2445DF4F9B17AD2B417BE66C3710} #{23304B7A39F9F3FF067D8D8F9E24ECC7}
	]
	AES-128-CBC [
		#{2B7E151628AED2A6ABF7158809CF4F3C} #{000102030405060708090A0B0C0D0E0F} #{6BC1BEE22E409F96E93D7E117393172A} #{7649ABAC8119B246CEE98E9B12E9197D}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #{7649ABAC8119B246CEE98E9B12E9197D} #{AE2D8A571E03AC9C9EB76FAC45AF8E51} #{5086CB9B507219EE95DB113A917678B2}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #{5086CB9B507219EE95DB113A917678B2} #{30C81C46A35CE411E5FBC1191A0A52EF} #{73BED6B8E3C1743B7116E69E22229516}
		#{2B7E151628AED2A6ABF7158809CF4F3C} #{73BED6B8E3C1743B7116E69E22229516} #{F69F2445DF4F9B17AD2B417BE66C3710} #{3FF1CAA1681FAC09120ECA307586E1A7}
	]
	AES-192-CBC [
		#{8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b}
		#{000102030405060708090A0B0C0D0E0F}
		#{6bc1bee22e409f96e93d7e117393172a}
		#{4f021db243bc633d7178183a9fa071e8}

		#{8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b}
		#{4F021DB243BC633D7178183A9FA071E8}
		#{ae2d8a571e03ac9c9eb76fac45af8e51}
		#{b4d9ada9ad7dedf4e5e738763f69145a}

		#{8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b}
		#{B4D9ADA9AD7DEDF4E5E738763F69145A}
		#{30c81c46a35ce411e5fbc1191a0a52ef}
		#{571b242012fb7ae07fa9baac3df102e0}

		#{8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b}
		#{571B242012FB7AE07FA9BAAC3DF102E0}
		#{f69f2445df4f9b17ad2b417be66c3710}
		#{08b0e27988598881d920a9e64f5615cd}
	]
	AES-256-CBC [
		#{603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4}
		#{000102030405060708090A0B0C0D0E0F}
		#{6bc1bee22e409f96e93d7e117393172a}
		#{f58c4c04d6e5f1ba779eabfb5f7bfbd6}

		#{603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4}
		#{F58C4C04D6E5F1BA779EABFB5F7BFBD6}
		#{ae2d8a571e03ac9c9eb76fac45af8e51}
		#{9cfc4e967edb808d679f777bc6702c7d}

		#{603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4}
		#{9CFC4E967EDB808D679F777BC6702C7D}
		#{30c81c46a35ce411e5fbc1191a0a52ef}
		#{39f23369a9d9bacfa530e26304231461}

		#{603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4}
		#{39F23369A9D9BACFA530E26304231461}
		#{f69f2445df4f9b17ad2b417be66c3710}
		#{b2eb05e2c39be9fcda6c19078c6a9d1b}
	]
]
foreach [cipher tests] tests [
	if find system/catalog/ciphers cipher [
		--test-- join "Crypt port: " cipher
		port: open make port! [scheme: 'crypt algorithm: cipher]
		foreach [key iv plain cipher] tests [
			test-crypt port key iv plain cipher
		]
		close port
	]
]
===end-group===



===start-group=== "NIST test vectors (ECB)"

monte-carlo-test-crypt: function[port key iv plain cipher][
	modify port 'direction 'encrypt
	modify port 'key key
	modify port 'iv  iv
	x: plain
	loop 10000 [ x: read write port x ]
	--assert cipher = x
	modify port 'direction 'decrypt
	loop 10000 [ x: read write port x ]
	--assert plain  = x
]
monte-carlo-ecb-tests: [
	AES-128-ECB [
		#{00000000000000000000000000000000}
		#[none]
		#{00000000000000000000000000000000}
		#{C34C052CC0DA8D73451AFE5F03BE297F}

		#{00000000000000000000000000000000}
		#[none]
		#{44416AC2D1F53C583303917E6BE9EBE0}
		#{00000000000000000000000000000000}
	]
	AES-192-ECB [
		#{000000000000000000000000000000000000000000000000}
		#[none]
		#{48E31E9E256718F29229319C19F15BA4}
		#{00000000000000000000000000000000}
	]
	AES-256-ECB [
		#{0000000000000000000000000000000000000000000000000000000000000000}
		#[none]
		#{058CCFFDBBCB382D1F6F56585D8A4ADE}
		#{00000000000000000000000000000000}
	]
]

foreach [cipher tests] monte-carlo-ecb-tests [
	if find system/catalog/ciphers cipher [
		--test-- join "Crypt port (Monte Carlo): " cipher
		port: open make port! [scheme: 'crypt algorithm: cipher]
		foreach [key iv plain cipher] tests [
			monte-carlo-test-crypt port key iv plain cipher
		]
		close port
	]
]

===end-group===



===start-group=== "NIST test vectors (CBC)"

monte-carlo-cbc-test-crypt: function[port key iv plain cipher][
	modify port 'direction 'encrypt
	modify port 'key key
	modify port 'iv  iv
	pt: plain
	ct-1: iv
	loop 10000 [
		ct: read write port pt
		pt: ct-1
		ct-1: ct
	]
	--assert cipher  = ct
]

monte-carlo-cbc-tests: [
	AES-128-CBC [
		#{00000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{8A05FC5E095AF4848A08D328D3688E3D}
	]
	AES-192-CBC [
		#{000000000000000000000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{7BD966D53AD8C1BB85D2ADFAE87BB104}
	]
	AES-256-CBC [
		#{0000000000000000000000000000000000000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{00000000000000000000000000000000}
		#{FE3C53653E2F45B56FCD88B2CC898FF0}
	]
]

foreach [cipher tests] monte-carlo-cbc-tests [
	if find system/catalog/ciphers cipher [
		--test-- join "Crypt port (Monte Carlo): " cipher
		port: open make port! [scheme: 'crypt algorithm: cipher]
		foreach [key iv plain cipher] tests [
			monte-carlo-cbc-test-crypt port key iv plain cipher
		]
		close port
	]
]


===end-group===

~~~end-file~~~